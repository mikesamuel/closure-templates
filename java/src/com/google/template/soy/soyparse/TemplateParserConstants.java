/* Generated By:JavaCC: Do not edit this line. TemplateParserConstants.java */
package com.google.template.soy.soyparse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface TemplateParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LINE_COMMENT_AT_SOL = 1;
  /** RegularExpression Id. */
  int LINE_COMMENT_NOT_SOL = 2;
  /** RegularExpression Id. */
  int BLOCK_DOC_COMMENT_START = 3;
  /** RegularExpression Id. */
  int BLOCK_NONDOC_COMMENT_START = 4;
  /** RegularExpression Id. */
  int BLOCK_COMMENT_CHAR = 5;
  /** RegularExpression Id. */
  int BLOCK_DOC_COMMENT = 6;
  /** RegularExpression Id. */
  int BLOCK_NONDOC_COMMENT = 7;
  /** RegularExpression Id. */
  int SOY_TAG_OPEN_1 = 8;
  /** RegularExpression Id. */
  int SOY_TAG_OPEN_2 = 9;
  /** RegularExpression Id. */
  int XXX_UNMATCHED_RIGHT_BRACE_1 = 10;
  /** RegularExpression Id. */
  int XXX_UNMATCHED_RIGHT_BRACE_2 = 11;
  /** RegularExpression Id. */
  int CMD_NAME_PARAM_DECL = 12;
  /** RegularExpression Id. */
  int CMD_NAME_INJECTED_PARAM_DECL = 13;
  /** RegularExpression Id. */
  int XXX_CMD_NAME_INVALID_DECL = 14;
  /** RegularExpression Id. */
  int CMD_NAME_SP = 15;
  /** RegularExpression Id. */
  int CMD_NAME_NIL = 16;
  /** RegularExpression Id. */
  int CMD_NAME_LF = 17;
  /** RegularExpression Id. */
  int CMD_NAME_CR = 18;
  /** RegularExpression Id. */
  int CMD_NAME_TAB = 19;
  /** RegularExpression Id. */
  int CMD_NAME_LB = 20;
  /** RegularExpression Id. */
  int CMD_NAME_RB = 21;
  /** RegularExpression Id. */
  int CMD_NAME_LITERAL = 22;
  /** RegularExpression Id. */
  int CMD_NAME_END_LITERAL = 23;
  /** RegularExpression Id. */
  int CMD_NAME_MSG = 24;
  /** RegularExpression Id. */
  int CMD_NAME_FALLBACKMSG = 25;
  /** RegularExpression Id. */
  int CMD_NAME_END_MSG = 26;
  /** RegularExpression Id. */
  int CMD_NAME_PLURAL = 27;
  /** RegularExpression Id. */
  int CMD_NAME_END_PLURAL = 28;
  /** RegularExpression Id. */
  int CMD_NAME_SELECT = 29;
  /** RegularExpression Id. */
  int CMD_NAME_END_SELECT = 30;
  /** RegularExpression Id. */
  int CMD_NAME_PRINT = 31;
  /** RegularExpression Id. */
  int CMD_NAME_XID = 32;
  /** RegularExpression Id. */
  int CMD_NAME_CSS = 33;
  /** RegularExpression Id. */
  int CMD_NAME_LET = 34;
  /** RegularExpression Id. */
  int CMD_NAME_END_LET = 35;
  /** RegularExpression Id. */
  int CMD_NAME_IF = 36;
  /** RegularExpression Id. */
  int CMD_NAME_ELSEIF = 37;
  /** RegularExpression Id. */
  int CMD_NAME_ELSE = 38;
  /** RegularExpression Id. */
  int CMD_NAME_END_IF = 39;
  /** RegularExpression Id. */
  int CMD_NAME_SWITCH = 40;
  /** RegularExpression Id. */
  int CMD_NAME_END_SWITCH = 41;
  /** RegularExpression Id. */
  int CMD_NAME_FOREACH = 42;
  /** RegularExpression Id. */
  int CMD_NAME_IFEMPTY = 43;
  /** RegularExpression Id. */
  int CMD_NAME_END_FOREACH = 44;
  /** RegularExpression Id. */
  int CMD_NAME_FOR = 45;
  /** RegularExpression Id. */
  int CMD_NAME_END_FOR = 46;
  /** RegularExpression Id. */
  int CMD_NAME_ANY_CALL = 47;
  /** RegularExpression Id. */
  int CMD_NAME_END_ANY_CALL = 48;
  /** RegularExpression Id. */
  int CMD_NAME_PARAM = 49;
  /** RegularExpression Id. */
  int CMD_NAME_END_PARAM = 50;
  /** RegularExpression Id. */
  int CMD_NAME_LOG = 51;
  /** RegularExpression Id. */
  int CMD_NAME_END_LOG = 52;
  /** RegularExpression Id. */
  int CMD_NAME_DEBUGGER = 53;
  /** RegularExpression Id. */
  int CMD_NAME_CASE = 54;
  /** RegularExpression Id. */
  int CMD_NAME_DEFAULT = 55;
  /** RegularExpression Id. */
  int CMD_NAME_NAMESPACE = 56;
  /** RegularExpression Id. */
  int CMD_NAME_TEMPLATE = 57;
  /** RegularExpression Id. */
  int CMD_NAME_END_TEMPLATE = 58;
  /** RegularExpression Id. */
  int XXX_NO_CMD_NAME = 59;
  /** RegularExpression Id. */
  int XXX_BRACE_AFTER_SOY_TAG_OPEN = 60;
  /** RegularExpression Id. */
  int REG_SOY_TAG_CLOSE_AFTER_CMD_NAME_1 = 61;
  /** RegularExpression Id. */
  int SELF_ENDING_SOY_TAG_CLOSE_AFTER_CMD_NAME_1 = 62;
  /** RegularExpression Id. */
  int REG_SOY_TAG_CLOSE_AFTER_CMD_NAME_2 = 63;
  /** RegularExpression Id. */
  int SELF_ENDING_SOY_TAG_CLOSE_AFTER_CMD_NAME_2 = 64;
  /** RegularExpression Id. */
  int WS_AFTER_CMD_NAME = 65;
  /** RegularExpression Id. */
  int NOT_CMD_NAME_BOUNDARY_AFTER_CMD_NAME = 66;
  /** RegularExpression Id. */
  int CMD_TEXT_DIRECTIVE_NAME = 67;
  /** RegularExpression Id. */
  int CMD_TEXT_PHNAME_ATTR = 68;
  /** RegularExpression Id. */
  int XXX_CMD_TEXT_PHNAME_NOT_IDENT = 69;
  /** RegularExpression Id. */
  int CMD_TEXT_CHAR_1 = 70;
  /** RegularExpression Id. */
  int CMD_TEXT_CHAR_2 = 71;
  /** RegularExpression Id. */
  int REG_SOY_TAG_CLOSE_AFTER_CMD_TEXT_1 = 72;
  /** RegularExpression Id. */
  int SELF_ENDING_SOY_TAG_CLOSE_AFTER_CMD_TEXT_1 = 73;
  /** RegularExpression Id. */
  int REG_SOY_TAG_CLOSE_AFTER_CMD_TEXT_2 = 74;
  /** RegularExpression Id. */
  int SELF_ENDING_SOY_TAG_CLOSE_AFTER_CMD_TEXT_2 = 75;
  /** RegularExpression Id. */
  int XXX_LEFT_BRACE_IN_SOY_TAG_1 = 76;
  /** RegularExpression Id. */
  int XXX_DOUBLE_RIGHT_BRACE_IN_SOY_TAG_1 = 77;
  /** RegularExpression Id. */
  int XXX_DOUBLE_LEFT_BRACE_IN_SOY_TAG_2 = 78;
  /** RegularExpression Id. */
  int XXX_BRACE_BEFORE_SOY_TAG_CLOSE = 79;
  /** RegularExpression Id. */
  int MSG_HTML_TAG_OPEN = 80;
  /** RegularExpression Id. */
  int MSG_HTML_TAG_CLOSE = 81;
  /** RegularExpression Id. */
  int LITERAL_RAW_TEXT_CONTENT = 83;
  /** RegularExpression Id. */
  int XXX_INVALID_END_LITERAL_TAG = 84;
  /** RegularExpression Id. */
  int XXX_NESTED_LITERAL_TAG = 85;
  /** RegularExpression Id. */
  int TOKEN_NL = 86;
  /** RegularExpression Id. */
  int TOKEN_WS_NOT_NL = 87;
  /** RegularExpression Id. */
  int TOKEN_NOT_WS = 88;
  /** RegularExpression Id. */
  int ANY_CHAR = 89;
  /** RegularExpression Id. */
  int WS = 90;
  /** RegularExpression Id. */
  int WS_CHAR = 91;
  /** RegularExpression Id. */
  int NOT_WS = 92;
  /** RegularExpression Id. */
  int NL = 93;
  /** RegularExpression Id. */
  int NOT_NL = 94;
  /** RegularExpression Id. */
  int WS_NOT_NL = 95;
  /** RegularExpression Id. */
  int BRACE = 96;
  /** RegularExpression Id. */
  int NOT_BRACE = 97;
  /** RegularExpression Id. */
  int QMARK = 98;
  /** RegularExpression Id. */
  int IDENT = 99;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int DEFAULT_IN_MSG_BLOCK_AT_SOL = 1;
  /** Lexical state. */
  int DEFAULT_NOT_SOL = 2;
  /** Lexical state. */
  int DEFAULT_IN_MSG_BLOCK_NOT_SOL = 3;
  /** Lexical state. */
  int IN_BLOCK_DOC_COMMENT = 4;
  /** Lexical state. */
  int IN_BLOCK_NONDOC_COMMENT = 5;
  /** Lexical state. */
  int AFTER_SOY_TAG_OPEN = 6;
  /** Lexical state. */
  int AFTER_CMD_NAME_1 = 7;
  /** Lexical state. */
  int AFTER_CMD_NAME_2 = 8;
  /** Lexical state. */
  int IN_CMD_TEXT_1 = 9;
  /** Lexical state. */
  int IN_CMD_TEXT_2 = 10;
  /** Lexical state. */
  int IN_LITERAL_BLOCK = 11;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<LINE_COMMENT_AT_SOL>",
    "<LINE_COMMENT_NOT_SOL>",
    "\"/**\"",
    "\"/*\"",
    "<BLOCK_COMMENT_CHAR>",
    "\"*/\"",
    "\"*/\"",
    "\"{\"",
    "\"{{\"",
    "\"}\"",
    "\"}}\"",
    "\"@param\"",
    "\"@inject\"",
    "<XXX_CMD_NAME_INVALID_DECL>",
    "\"sp\"",
    "\"nil\"",
    "\"\\\\n\"",
    "\"\\\\r\"",
    "\"\\\\t\"",
    "\"lb\"",
    "\"rb\"",
    "\"literal\"",
    "\"/literal\"",
    "\"msg\"",
    "\"fallbackmsg\"",
    "\"/msg\"",
    "\"plural\"",
    "\"/plural\"",
    "\"select\"",
    "\"/select\"",
    "\"print\"",
    "\"xid\"",
    "\"css\"",
    "\"let\"",
    "\"/let\"",
    "\"if\"",
    "\"elseif\"",
    "\"else\"",
    "\"/if\"",
    "\"switch\"",
    "\"/switch\"",
    "\"foreach\"",
    "\"ifempty\"",
    "\"/foreach\"",
    "\"for\"",
    "\"/for\"",
    "<CMD_NAME_ANY_CALL>",
    "<CMD_NAME_END_ANY_CALL>",
    "\"param\"",
    "\"/param\"",
    "\"log\"",
    "\"/log\"",
    "\"debugger\"",
    "\"case\"",
    "\"default\"",
    "\"namespace\"",
    "\"template\"",
    "\"/template\"",
    "\"\"",
    "<XXX_BRACE_AFTER_SOY_TAG_OPEN>",
    "\"}\"",
    "\"/}\"",
    "\"}}\"",
    "\"/}}\"",
    "<WS_AFTER_CMD_NAME>",
    "\"\"",
    "<CMD_TEXT_DIRECTIVE_NAME>",
    "<CMD_TEXT_PHNAME_ATTR>",
    "<XXX_CMD_TEXT_PHNAME_NOT_IDENT>",
    "<CMD_TEXT_CHAR_1>",
    "<CMD_TEXT_CHAR_2>",
    "\"}\"",
    "\"/}\"",
    "\"}}\"",
    "\"/}}\"",
    "\"{\"",
    "<XXX_DOUBLE_RIGHT_BRACE_IN_SOY_TAG_1>",
    "\"{{\"",
    "<XXX_BRACE_BEFORE_SOY_TAG_CLOSE>",
    "\"<\"",
    "\">\"",
    "<token of kind 82>",
    "<LITERAL_RAW_TEXT_CONTENT>",
    "<XXX_INVALID_END_LITERAL_TAG>",
    "<XXX_NESTED_LITERAL_TAG>",
    "<TOKEN_NL>",
    "<TOKEN_WS_NOT_NL>",
    "<TOKEN_NOT_WS>",
    "<ANY_CHAR>",
    "<WS>",
    "<WS_CHAR>",
    "<NOT_WS>",
    "<NL>",
    "<NOT_NL>",
    "<WS_NOT_NL>",
    "<BRACE>",
    "<NOT_BRACE>",
    "<QMARK>",
    "<IDENT>",
  };

}
